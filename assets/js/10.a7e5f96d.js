(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chronos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chronos"}},[t._v("#")]),t._v(" Chronos")]),t._v(" "),a("p",[t._v("Chronos is an efficient "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Async/await",target:"_blank",rel:"noopener noreferrer"}},[t._v("async/await"),a("OutboundLink")],1),t._v(" framework for Nim. Features include:")]),t._v(" "),a("ul",[a("li",[t._v("Efficient dispatch pipeline for asynchronous execution")]),t._v(" "),a("li",[t._v("HTTP server with SSL/TLS support out of the box (no OpenSSL needed)")]),t._v(" "),a("li",[t._v("Cancellation support")]),t._v(" "),a("li",[t._v("Synchronization primitivies like queues, events and locks")]),t._v(" "),a("li",[t._v("FIFO processing order of dispatch queue")]),t._v(" "),a("li",[t._v("Minimal exception effect support (see "),a("a",{attrs:{href:"#exception-effects"}},[t._v("exception effects")]),t._v(")")])]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("You can use Nim's official package manager Nimble to install Chronos:")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("nimble install https://github.com/status-im/nim-chronos.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("or add a dependency to your "),a("code",[t._v(".nimble")]),t._v(" file:")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('requires "chronos"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"projects-using-chronos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#projects-using-chronos"}},[t._v("#")]),t._v(" Projects using "),a("code",[t._v("chronos")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/status-im/nim-libp2p",target:"_blank",rel:"noopener noreferrer"}},[t._v("libp2p"),a("OutboundLink")],1),t._v(" - Peer-to-Peer networking stack implemented in many languages")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bung87/Looper",target:"_blank",rel:"noopener noreferrer"}},[t._v("Looper"),a("OutboundLink")],1),t._v(" - Web framework")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/gogolxdong/2DeFi",target:"_blank",rel:"noopener noreferrer"}},[t._v("2DeFi"),a("OutboundLink")],1),t._v(" - Decentralised file system")])]),t._v(" "),a("p",[a("code",[t._v("chronos")]),t._v(" is available in the "),a("a",{attrs:{href:"https://play.nim-lang.org/#ix=2TpS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nim Playground"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Submit a PR to add yours!")]),t._v(" "),a("h2",{attrs:{id:"documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),a("h3",{attrs:{id:"concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[t._v("#")]),t._v(" Concepts")]),t._v(" "),a("p",[t._v("Chronos implements the async/await paradigm in a self-contained library, using\nmacros, with no specific helpers from the compiler.")]),t._v(" "),a("p",[t._v('Our event loop is called a "dispatcher" and a single instance per thread is\ncreated, as soon as one is needed.')]),t._v(" "),a("p",[t._v("To trigger a dispatcher's processing step, we need to call "),a("code",[t._v("poll()")]),t._v(" - either\ndirectly or through a wrapper like "),a("code",[t._v("runForever()")]),t._v(" or "),a("code",[t._v("waitFor()")]),t._v(". This step\nhandles any file descriptors, timers and callbacks that are ready to be\nprocessed.")]),t._v(" "),a("p",[a("code",[t._v("Future")]),t._v(" objects encapsulate the result of an async procedure, upon successful\ncompletion, and a list of callbacks to be scheduled after any type of\ncompletion - be that success, failure or cancellation.")]),t._v(" "),a("p",[t._v("(These explicit callbacks are rarely used outside Chronos, being replaced by\nimplicit ones generated by async procedure execution and "),a("code",[t._v("await")]),t._v(" chaining.)")]),t._v(" "),a("p",[t._v("Async procedures (those using the "),a("code",[t._v("{.async.}")]),t._v(" pragma) return "),a("code",[t._v("Future")]),t._v(" objects.")]),t._v(" "),a("p",[t._v("Inside an async procedure, you can "),a("code",[t._v("await")]),t._v(" the future returned by another async\nprocedure. At this point, control will be handled to the event loop until that\nfuture is completed.")]),t._v(" "),a("p",[t._v("Future completion is tested with "),a("code",[t._v("Future.finished()")]),t._v(" and is defined as success,\nfailure or cancellation. This means that a future is either pending or completed.")]),t._v(" "),a("p",[t._v("To differentiate between completion states, we have "),a("code",[t._v("Future.failed()")]),t._v(" and\n"),a("code",[t._v("Future.cancelled()")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"dispatcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatcher"}},[t._v("#")]),t._v(" Dispatcher")]),t._v(" "),a("p",[t._v('You can run the "dispatcher" event loop forever, with '),a("code",[t._v("runForever()")]),t._v(" which is defined as:")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("runForever"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" true"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("You can also run it until a certain future is completed, with "),a("code",[t._v("waitFor()")]),t._v(" which\nwill also call "),a("code",[t._v("Future.read()")]),t._v(" on it:")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.")]),t._v("milliseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\necho waitFor "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# prints "1"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("code",[t._v("waitFor()")]),t._v(" is defined like this:")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitFor*[T]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fut"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"async-procedures-and-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-procedures-and-methods"}},[t._v("#")]),t._v(" Async procedures and methods")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("{.async.}")]),t._v(" pragma will transform a procedure (or a method) returning a\nspecialised "),a("code",[t._v("Future")]),t._v(" type into a closure iterator. If there is no return type\nspecified, a "),a("code",[t._v("Future[void]")]),t._v(" is returned.")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.")]),t._v("milliseconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\necho "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# prints "Future[system.void]"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("Whenever "),a("code",[t._v("await")]),t._v(" is encountered inside an async procedure, control is passed\nback to the dispatcher for as many steps as it's necessary for the awaited\nfuture to complete successfully, fail or be cancelled. "),a("code",[t._v("await")]),t._v(" calls the\nequivalent of "),a("code",[t._v("Future.read()")]),t._v(" on the completed future and returns the\nencapsulated value.")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("\n    fut1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fut2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Just by executing the async procs, both resulting futures entered the")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# dispatcher\'s queue and their "clocks" started ticking.')]),t._v("\n  await fut1\n  await fut2\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Only one second passed while awaiting them both, not two.")]),t._v("\n\nwaitFor "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("Don't let "),a("code",[t._v("await")]),t._v("'s behaviour of giving back control to the dispatcher surprise\nyou. If an async procedure modifies global state, and you can't predict when it\nwill start executing, the only way to avoid that state changing underneath your\nfeet, in a certain section, is to not use "),a("code",[t._v("await")]),t._v(" in it.")]),t._v(" "),a("h3",{attrs:{id:"error-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-handling"}},[t._v("#")]),t._v(" Error handling")]),t._v(" "),a("p",[t._v("Exceptions inheriting from "),a("code",[t._v("CatchableError")]),t._v(" are caught by hidden "),a("code",[t._v("try")]),t._v(" blocks\nand placed in the "),a("code",[t._v("Future.error")]),t._v(" field, changing the future's status to\n"),a("code",[t._v("Failed")]),t._v(".")]),t._v(" "),a("p",[t._v("When a future is awaited, that exception is re-raised, only to be caught again\nby a hidden "),a("code",[t._v("try")]),t._v(" block in the calling async procedure. That's how these\nexceptions move up the async chain.")]),t._v(" "),a("p",[t._v("A failed future's callbacks will still be scheduled, but it's not possible to\nresume execution from the point an exception was raised.")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ValueError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ValueError inherits from CatchableError"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  await "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleepAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("\n    fut1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fut2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  await fut1\n  echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unreachable code here"')]),t._v("\n  await fut2\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `waitFor()` would call `Future.read()` unconditionally, which would raise the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exception in `Future.error`.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fut3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("not")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fut3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finished")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\necho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fut3.state = "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fut3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Failed"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" fut3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("failed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p3() failed: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fut3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fut3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("msg\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# prints "p3() failed: ValueError: ValueError inherits from CatchableError"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("p",[t._v("You can put the "),a("code",[t._v("await")]),t._v(" in a "),a("code",[t._v("try")]),t._v(" block, to deal with that exception sooner:")]),t._v(" "),a("div",{staticClass:"language-nim line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-nim"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{.")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("\n    fut1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fut2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    await fut1\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" CachableError"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p1() failed: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fut1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('": "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fut1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v("msg\n  echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reachable code here"')]),t._v("\n  await fut2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("Chronos does not allow that future continuations and other callbacks raise\n"),a("code",[t._v("CatchableError")]),t._v(" - as such, calls to "),a("code",[t._v("poll")]),t._v(" will never raise exceptions caused\noriginating from tasks on the dispatcher queue. It is however possible that\n"),a("code",[t._v("Defect")]),t._v(" that happen in tasks bubble up through "),a("code",[t._v("poll")]),t._v(" as these are not caught\nby the transformation.")]),t._v(" "),a("h3",{attrs:{id:"platform-independence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platform-independence"}},[t._v("#")]),t._v(" Platform independence")]),t._v(" "),a("p",[t._v("Several functions in "),a("code",[t._v("chronos")]),t._v(" are backed by the operating system, such as\nwaiting for network events, creating files and sockets etc. The specific\nexceptions that are raised by the OS is platform-dependent, thus such functions\nare declared as raising "),a("code",[t._v("CatchableError")]),t._v(" but will in general raise something\nmore specific. In particular, it's possible that some functions that are\nannotated as raising "),a("code",[t._v("CatchableError")]),t._v(" only raise on "),a("em",[t._v("some")]),t._v(" platforms - in order\nto work on all platforms, calling code must assume that they will raise even\nwhen they don't seem to do so on one platform.")]),t._v(" "),a("h3",{attrs:{id:"exception-effects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exception-effects"}},[t._v("#")]),t._v(" Exception effects")]),t._v(" "),a("p",[a("code",[t._v("chronos")]),t._v(" currently offers minimal support for exception effects and "),a("code",[t._v("raises")]),t._v("\nannotations. In general, during the "),a("code",[t._v("async")]),t._v(" transformation, a generic\n"),a("code",[t._v("except CatchableError")]),t._v(" handler is added around the entire function being\ntransformed, in order to catch any exceptions and transfer them to the "),a("code",[t._v("Future")]),t._v('.\nBecause of this, the effect system thinks no exceptions are "leaking" because in\nfact, exception '),a("em",[t._v("handling")]),t._v(" is deferred to when the future is being read.")]),t._v(" "),a("p",[t._v("Effectively, this means that while code can be compiled with\n"),a("code",[t._v("{.push raises: [Defect]}")]),t._v(", the intended effect propagation and checking is\n"),a("strong",[t._v("disabled")]),t._v(" for "),a("code",[t._v("async")]),t._v(" functions.")]),t._v(" "),a("p",[t._v("To enable checking exception effects in "),a("code",[t._v("async")]),t._v(" code, enable strict mode with\n"),a("code",[t._v("-d:chronosStrictException")]),t._v(".")]),t._v(" "),a("p",[t._v("In the strict mode, "),a("code",[t._v("async")]),t._v(" functions are checked such that they only raise\n"),a("code",[t._v("CatchableError")]),t._v(" and thus must make sure to explicitly specify exception\neffects on forward declarations, callbacks and methods using\n"),a("code",[t._v("{.raises: [CatchableError].}")]),t._v(" (or more strict) annotations.")]),t._v(" "),a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" TODO")]),t._v(" "),a("ul",[a("li",[t._v("Pipe/Subprocess Transports.")]),t._v(" "),a("li",[t._v("Multithreading Stream/Datagram servers")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
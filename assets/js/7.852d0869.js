(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{364:function(t,e,a){"use strict";a.r(e);var r=a(44),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"how-the-documentation-is-organized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-the-documentation-is-organized"}},[t._v("#")]),t._v(" How the Documentation is organized")]),t._v(" "),a("p",[t._v("Documentation is organized into four categories: tutorials, overviews, API references and how-to guides.")]),t._v(" "),a("ul",[a("li",[t._v("Tutorials take you by the hand through a series of steps to put a library / module to use. Start here if youâ€™re new to a library.")]),t._v(" "),a("li",[t._v("Overviews discuss key topics and concepts at a fairly high level and provide useful background information and explanation. Those are the things you usually see in READMEs of repos.")]),t._v(" "),a("li",[t._v("API references contain technical reference for APIs and other aspects of a module's machinery. They describe how it works and how to use it but assume that you have a basic understanding of key concepts. These are auto-generated from the code, and depend heavily on the programmer's verbosity and the technical writer's persistence.")]),t._v(" "),a("li",[t._v("How-to guides are recipes. They guide you through the steps involved in addressing key problems and use-cases. They are more advanced, shorter, and more specific than tutorials and assume some previous knowledge.")])]),t._v(" "),a("h2",{attrs:{id:"get-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-started"}},[t._v("#")]),t._v(" Get Started")]),t._v(" "),a("p",[t._v("Use the search field in the header, or find a desired library in the sections below. Each library has its own documentation with a full API reference and guides. If you'd like to contribute to these docs with your own work or some corrections, please file issues or PRs "),a("a",{attrs:{href:"https://github.com/status-im/nimbus-libs-site",target:"_blank",rel:"noopener noreferrer"}},[t._v("in the Github repo"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nim-libp2p/"}},[t._v("libp2p")]),a("Badge",{attrs:{text:"libp2p"}}),a("Badge",{attrs:{text:"networking"}}),a("Badge",{attrs:{text:"development",type:"warn"}})],1),a("p",[t._v("nim-libp2p is an implementation of the libp2p modular peer-to-peer networking stack based on Chronos")])]),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nim-chronicles/"}},[t._v("Chronicles")]),a("Badge",{attrs:{text:"logging"}}),a("Badge",{attrs:{text:"stable"}})],1),a("p",[t._v("Chronicles is a library for structured logging. It adheres to the philosophy that log files shouldn't be based on formatted text strings, but rather on well-defined event records with arbitrary properties that are easy to read for both humans and machines.")])]),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nimcrypto/"}},[t._v("Nimcrypto")]),a("Badge",{attrs:{text:"cryptography"}}),a("Badge",{attrs:{text:"development",type:"warn"}})],1),a("p",[t._v("Nimcrypto is Nim's cryptographic library. It implements several popular cryptographic algorithms and their tests with some "),a("a",{attrs:{href:"https://github.com/cheatfate/nimcrypto/tree/master/examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("examples"),a("OutboundLink")],1),t._v(".")])]),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nim-chronos/"}},[t._v("Chronos")]),a("Badge",{attrs:{text:"async"}}),a("Badge",{attrs:{text:"stable"}}),a("Badge",{attrs:{text:"networking"}})],1),a("p",[t._v("Chronos is an efficient library for asynchronous programming and an alternative to Nim's asyncdispatch.")])]),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nim-eth/"}},[t._v("Eth")]),a("Badge",{attrs:{text:"eth"}}),a("Badge",{attrs:{text:"keys"}}),a("Badge",{attrs:{text:"bloom"}}),a("Badge",{attrs:{text:"rlp"}}),a("Badge",{attrs:{text:"encoding"}}),a("Badge",{attrs:{text:"formatting"}}),a("Badge",{attrs:{text:"cryptography"}}),a("Badge",{attrs:{text:"development",type:"warn"}})],1),a("p",[t._v("Ethereum-related utilities written in Nim. Includes things like Bloom filters, private/public key utilities, devp2p, RLP, and more.")])]),a("div",{staticClass:"theorem"},[a("p",{staticClass:"title"},[a("a",{attrs:{href:"/lib/nim-stew/"}},[t._v("Stew")]),a("Badge",{attrs:{text:"encoding"}}),a("Badge",{attrs:{text:"formatting"}}),a("Badge",{attrs:{text:"development",type:"warn"}}),a("Badge",{attrs:{text:"utilities"}})],1),a("p",[t._v("General-purpose utilities and standard library extensions")])])])}),[],!1,null,null,null);e.default=s.exports}}]);